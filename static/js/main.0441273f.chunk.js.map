{"version":3,"sources":["utils/useFetch.js","utils/useLocalStorage.js","WeatherContext.js","Toolbar.js","images/tealbg.jpeg","images/pinkbg.jpeg","UserInput.js","WeatherDetails.js","WeatherInfo.js","LocationInfo.js","FetchLoader.js","Content.js","App.js","index.js"],"names":["useFetch","domainURL","useState","response","setResponse","error","setError","isLoading","setIsLoading","options","setOptions","pathURL","setpathURL","fetchData","useCallback","a","axios","get","res","err","stack","console","useEffect","useLocalStorage","key","initValue","React","retrieved","localStorage","getItem","JSON","parse","log","storedValue","setStoredValue","setLocalStorage","value","valueToStore","Function","setItem","stringify","WeatherContext","createContext","themes","WeatherProvider","props","lang","setLang","isMetric","setIsMetric","colorTheme","setColorTheme","city","country","location","setLocation","Provider","OPENWEATHER_API_KEY","children","useStyles","makeStyles","theme","toolbar","width","display","direction","justifyContent","padding","background","toolbarBtn","margin","borderRadius","minWidth","color","border","height","transition","breakpoints","up","toolbarBtnPink","langSelect","selectMenu","langList","Toolbar","classes","useContext","className","Button","aria-label","onClick","e","prev","clss","idx","findIndex","x","length","FormControl","formControl","Select","onChange","event","target","displayEmpty","disableUnderline","inputProps","map","MenuItem","customTheme","inputColor","inputBgColor","inputBorderColor","searchBgColor","searchBgColorHover","inputContainer","cityField","fontSize","letterSpacing","textTransform","opacity","backgroundColor","borderBottom","borderBottomStyle","borderBottomWidth","borderBottomColor","cityFieldPink","countryCodeField","textAlign","searchBtn","boxShadow","searchBtnPink","UserInput","doFetch","cityRef","useRef","countryCodeRef","getData","current","trim","countryCode","focus","handleKeyPress","TextField","variant","placeholder","inputRef","onKeyPress","style","flex","Tooltip","title","arrow","placement","maxLength","disableElevation","accordionBgColor","accordionSummaryColor","accordionIconColor","accordionDetailsColor","accordionDetailsBgColor","tableBorderColor","tableColor","accordionHeading","accordion","minHeight","accordionPink","accordionIcon","accordionIconPink","table","tablePink","tableContainer","WeatherDetails","data","expanded","setExpanded","createData","name","measurement","panel","rows","wind","speed","toFixed","main","humidity","temp_min","temp_max","feels_like","marginTop","Accordion","isExpanded","square","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","TableContainer","component","Paper","Table","size","TableBody","row","TableRow","TableCell","scope","align","gridColor","gridBgColor","gridOuter","gridOuterPink","iconSize","weatherIcons","Clear","icon","faSun","Clouds","faCloud","Rain","faCloudShowersHeavy","Snow","faSnowflake","Haze","faSmog","WeatherInfo","temp","setTemp","isDay","setIsDay","iconDisplay","setIconDisplay","weather","faMoon","newTemp","dt","sys","sunrise","sunset","Grid","container","justify","alignItems","item","xs","flexDirection","paddingTop","description","citynameColor","refreshBtn","position","right","bottom","refreshBtnPink","citynameWrapper","paddingBottom","citynameWrapperPink","LocationInfo","messageColor","message","messagePink","FetchLoader","type","visible","cardWrapper","maxHeight","down","tealbg","cardWrapperPink","backgroundImage","pinkbg","contentWrapper","Content","setData","initFetch","setInitFetch","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0441273f.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n/*\r\n1) initialize hook:\r\n    const [{ response, error, isLoading }, doFetch] = useFetch( <<string of the base ULR here>> );\r\n2) calling doFetch:\r\n    doFetch( <<string of the path ULR here>> [, <<axios options object>> ] );\r\n*/\r\n\r\nconst useFetch = (domainURL) => {\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [options, setOptions] = useState({});\r\n    const [pathURL, setpathURL] = useState(\"\");\r\n\r\n    const doFetch = (pathURL = \"\", options = {}) => {\r\n        setOptions(options);\r\n        setpathURL(pathURL);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const fetchData = useCallback(async () => {\r\n        try {\r\n            const res = await axios.get(domainURL + pathURL, options);\r\n            setResponse(res);\r\n        } catch (e) {\r\n            const err = e.stack;\r\n            setError(err);\r\n            setResponse(null);\r\n            console.error(err);\r\n        }\r\n        setIsLoading(false);\r\n    }, [domainURL, pathURL, options]);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            return;\r\n        }\r\n        fetchData();\r\n    }, [isLoading, fetchData]);\r\n\r\n    return [{ response, error, isLoading }, doFetch];\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nconst useLocalStorage = (key = \"localStorage\", initValue = \"\") => {\r\n    const [storedValue, setStoredValue] = React.useState(() => {\r\n        try {\r\n            const retrieved = localStorage.getItem(key);\r\n            return retrieved ? JSON.parse(retrieved) : initValue;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return initValue;\r\n        }\r\n    });\r\n\r\n    const setLocalStorage = (value) => {\r\n        try {\r\n            const valueToStore =\r\n                value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return [storedValue, setLocalStorage];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { createContext } from \"react\";\r\nimport useLocalStorage from \"./utils/useLocalStorage.js\";\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nconst OPENWEATHER_API_KEY = \"b89977de37d4889c2867f0700af6e9c4\";\r\nconst themes = [\"teal\", \"pink\"];\r\n\r\nexport const WeatherProvider = (props) => {\r\n    const [lang, setLang] = useLocalStorage(\"language\", \"EN\");\r\n    const [isMetric, setIsMetric] = useLocalStorage(\r\n        \"measurementsInMetric\",\r\n        true\r\n    );\r\n    const [colorTheme, setColorTheme] = useLocalStorage(\"theme\", themes[0]);\r\n    const [location, setLocation] = useLocalStorage(\"location\", {\r\n        city: null,\r\n        country: null,\r\n    });\r\n\r\n    return (\r\n        <WeatherContext.Provider\r\n            value={{\r\n                lang,\r\n                setLang,\r\n                isMetric,\r\n                setIsMetric,\r\n                themes,\r\n                colorTheme,\r\n                setColorTheme,\r\n                location,\r\n                setLocation,\r\n                OPENWEATHER_API_KEY,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WeatherContext.Provider>\r\n    );\r\n};\r\n\r\nexport default WeatherContext;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport { MenuItem, Select, FormControl } from \"@material-ui/core\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport clss from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        direction: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        padding: \"20px 0px\",\r\n        background:\r\n            \"linear-gradient(180deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%)\",\r\n    },\r\n    toolbarBtn: {\r\n        margin: \"0px 10px\",\r\n        borderRadius: \"20px\",\r\n        width: \"64px\",\r\n        minWidth: \"10px\",\r\n        color: \"white\",\r\n        border: \"1px solid rgba(255,255,255,0.2)\",\r\n        padding: \"0px 0px\",\r\n        height: \"40px\",\r\n        \"& .MuiButton-root\": {\r\n            transition: \"none\",\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            \"&:hover\": {\r\n                border: \"1px solid rgba(127,127,127,1)\",\r\n                background:\r\n                    \"linear-gradient(180deg, rgba(7,111,121,0.6) 0%, rgba(7,111,121,0.2) 100%)\",\r\n            },\r\n        },\r\n    },\r\n    toolbarBtnPink: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            \"&:hover\": {\r\n                background:\r\n                    \"linear-gradient(180deg, rgba(87,7,42,0.6) 0%, rgba(87,7,42,0.2) 100%)\",\r\n            },\r\n        },\r\n    },\r\n    langSelect: {\r\n        \"& .MuiSelect-root\": {\r\n            padding: \"0px 10px 0px 0px\",\r\n        },\r\n        \"& .MuiSelect-icon\": {\r\n            color: \"white\",\r\n        },\r\n    },\r\n    selectMenu: {\r\n        // \"& .MuiList\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n        // \"& .MuiList-root\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n        // \"& .MuiList-padding\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n        // \"& .MuiPaper-root\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n        // \"& .MuiPopover-root\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n        // \"& .MuiSelect-selectMenu\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n        // \"& .MuiMenu-list\": {\r\n        //     padding: \"0px 0px\",\r\n        // },\r\n    },\r\n}));\r\n\r\nconst langList = [\"EN\", \"EL\", \"FR\", \"GE\", \"ES\", \"PT\", \"RU\"];\r\n\r\nconst Toolbar = () => {\r\n    const classes = useStyles();\r\n    const {\r\n        lang,\r\n        setLang,\r\n        isMetric,\r\n        setIsMetric,\r\n        themes,\r\n        colorTheme,\r\n        setColorTheme,\r\n    } = useContext(WeatherContext);\r\n\r\n    const handleLanguageChange = (event) => {\r\n        setLang(event.target.value);\r\n    };\r\n\r\n    const handleDegreeToggle = (e) => {\r\n        setIsMetric((prev) => !prev);\r\n    };\r\n\r\n    const handleThemeChange = () => {\r\n        let idx = themes.findIndex((x) => x === colorTheme);\r\n        if (idx >= themes.length - 1) {\r\n            idx = 0;\r\n        } else {\r\n            idx += 1;\r\n        }\r\n        setColorTheme(themes[idx]);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.toolbar}>\r\n            <Button\r\n                aria-label=\"units\"\r\n                onClick={handleDegreeToggle}\r\n                className={clss(\r\n                    classes.toolbarBtn,\r\n                    colorTheme === themes[1] && classes.toolbarBtnPink\r\n                )}\r\n            >\r\n                {isMetric ? \"°C\" : \"°F\"}\r\n            </Button>\r\n            <Button\r\n                aria-label=\"theme\"\r\n                onClick={handleThemeChange}\r\n                className={clss(\r\n                    classes.toolbarBtn,\r\n                    colorTheme === themes[1] && classes.toolbarBtnPink\r\n                )}\r\n            >\r\n                <PaletteIcon />\r\n            </Button>\r\n            <FormControl className={clss(classes.formControl)}>\r\n                <Select\r\n                    value={lang}\r\n                    onChange={handleLanguageChange}\r\n                    displayEmpty\r\n                    disableUnderline\r\n                    className={clss(\r\n                        classes.langSelect,\r\n                        classes.toolbarBtn,\r\n                        colorTheme === themes[1] && classes.toolbarBtnPink\r\n                    )}\r\n                    inputProps={{ \"aria-label\": \"Without label\" }}\r\n                >\r\n                    {langList.map((e) => {\r\n                        return (\r\n                            <MenuItem\r\n                                className={classes.selectMenu}\r\n                                key={e}\r\n                                value={e}\r\n                            >\r\n                                {e}\r\n                            </MenuItem>\r\n                        );\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;\r\n","export default __webpack_public_path__ + \"static/media/tealbg.535bfa94.jpeg\";","export default __webpack_public_path__ + \"static/media/pinkbg.a2f0854d.jpeg\";","import React, { useRef, useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport clss from \"classnames\";\r\n\r\nconst customTheme = {\r\n    t1: {\r\n        inputColor: \"white\",\r\n        inputBgColor: \"rgba(186, 214, 224,0.2)\",\r\n        inputBorderColor: \"#26c9b4\",\r\n        searchBgColor:\r\n            \"linear-gradient(45deg, rgba(7,111,121,0.6) 0%, rgba(19,157,171,0.6) 100%)\",\r\n        //   \"linear-gradient(45deg, rgba(14,87,210,0.5) 0%, rgba(43,140,203,0.5) 100%)\",\r\n        searchBgColorHover:\r\n            //   \"linear-gradient(45deg, rgba(14,87,210,0.75) 0%, rgba(43,140,203,0.75) 100%)\",\r\n            \"linear-gradient(45deg, rgba(7,111,121,0.8) 0%, rgba(19,157,171,0.8) 100%)\",\r\n    },\r\n    t2: {\r\n        inputColor: \"#57072a\",\r\n        inputBgColor: \"rgba(87, 7, 42,0.2)\", //\r\n        inputBorderColor: \"#ff006f\",\r\n        searchBgColor:\r\n            \"linear-gradient(45deg, rgba(87,7,42,0.6) 0%, rgba(138,33,79,0.6) 100%)\",\r\n        searchBgColorHover:\r\n            \"linear-gradient(45deg, rgba(87,7,42,0.8) 0%, rgba(138,33,79,0.8) 100%)\",\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputContainer: {\r\n        display: \"flex\",\r\n        direction: \"row\",\r\n    },\r\n    cityField: {\r\n        margin: \"0 2px 0 0\",\r\n        \"& .MuiInputBase-root\": {\r\n            color: customTheme.t1.inputColor,\r\n            fontSize: \"19px\",\r\n            letterSpacing: \"0.03em\",\r\n        },\r\n        \"& .MuiInputBase-input\": {\r\n            padding: \"10px 10px 8px\",\r\n            height: \"30px\",\r\n            textTransform: \"capitalize\",\r\n            \"&::placeholder\": {\r\n                color: customTheme.t1.inputColor,\r\n                opacity: 0.25,\r\n            },\r\n        },\r\n        \"& .MuiFilledInput-root\": {\r\n            borderRadius: \"0px\",\r\n            backgroundColor: customTheme.t1.inputBgColor,\r\n        },\r\n        \"& .MuiFilledInput-underline:before\": {\r\n            borderBottom: \"none\",\r\n        },\r\n        \"& .MuiFilledInput-underline:after\": {\r\n            transition: \"none\",\r\n            borderBottomStyle: \"solid\",\r\n            borderBottomWidth: \"2px\",\r\n            borderBottomColor: customTheme.t1.inputBorderColor,\r\n        },\r\n    },\r\n    cityFieldPink: {\r\n        \"& .MuiInputBase-root\": {\r\n            color: customTheme.t2.inputColor,\r\n        },\r\n        \"& .MuiInputBase-input\": {\r\n            \"&::placeholder\": {\r\n                color: customTheme.t2.inputColor,\r\n            },\r\n        },\r\n        \"& .MuiFilledInput-root\": {\r\n            backgroundColor: customTheme.t2.inputBgColor,\r\n        },\r\n        \"& .MuiFilledInput-underline:after\": {\r\n            borderBottomColor: customTheme.t2.inputBorderColor,\r\n        },\r\n    },\r\n    countryCodeField: {\r\n        \"& .MuiInputBase-root\": {\r\n            width: \"48px\",\r\n        },\r\n        \"& .MuiInputBase-input\": {\r\n            padding: \"10px 0px 8px\",\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n        },\r\n    },\r\n    searchBtn: {\r\n        borderRadius: \"0\",\r\n        margin: \"0px 0px 0px 4px\",\r\n        height: \"48px\",\r\n        padding: \"0px 0px\",\r\n        width: \"72px\",\r\n        minWidth: \"48px\",\r\n        color: \"white\",\r\n        background: customTheme.t1.searchBgColor,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            \"&:hover\": {\r\n                background: customTheme.t1.searchBgColorHover,\r\n            },\r\n        },\r\n        // \"&:hover\": {\r\n        //     background: customTheme.t1.searchBgColorHover,\r\n        // },\r\n        \"& .MuiButton-root\": {},\r\n        \"& .MuiButtonBase-root\": {},\r\n        \"& .MuiButton-contained\": {\r\n            boxShadow: \"none\",\r\n        },\r\n        \"& .MuiButton-label\": {},\r\n    },\r\n    searchBtnPink: {\r\n        background: customTheme.t2.searchBgColor,\r\n        // \"&:hover\": {\r\n        //     background: customTheme.t2.searchBgColorHover,\r\n        // },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            \"&:hover\": {\r\n                background: customTheme.t2.searchBgColorHover,\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport const UserInput = ({ doFetch }) => {\r\n    const classes = useStyles();\r\n    const { lang, themes, colorTheme, OPENWEATHER_API_KEY } = useContext(\r\n        WeatherContext\r\n    );\r\n    const cityRef = useRef();\r\n    const countryCodeRef = useRef();\r\n\r\n    const getData = () => {\r\n        const city = cityRef.current.value.trim();\r\n        const countryCode = countryCodeRef.current.value.trim();\r\n        if (city) {\r\n            cityRef.current.value = \"\";\r\n            countryCodeRef.current.value = \"\";\r\n            console.log(\"city: \" + city);\r\n            console.log(\"country: \" + countryCode);\r\n            doFetch(\r\n                `weather?q=${city}${\r\n                    countryCode ? \",\" + countryCode : \"\"\r\n                }&appid=${OPENWEATHER_API_KEY}&units=metric&lang=${lang}`\r\n            );\r\n        }\r\n        cityRef.current.focus();\r\n    };\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            getData();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className={classes.inputContainer}>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    placeholder=\"City\"\r\n                    inputRef={cityRef}\r\n                    onKeyPress={handleKeyPress}\r\n                    className={clss(\r\n                        classes.cityField,\r\n                        colorTheme === themes[1] && classes.cityFieldPink\r\n                    )}\r\n                    style={{ flex: \" 1 1 80px\" }}\r\n                />\r\n                <Tooltip title=\"country code\" arrow placement=\"bottom\">\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        placeholder=\"CC\"\r\n                        inputRef={countryCodeRef}\r\n                        onKeyPress={handleKeyPress}\r\n                        className={clss(\r\n                            classes.cityField,\r\n                            colorTheme === themes[1] && classes.cityFieldPink,\r\n                            classes.countryCodeField\r\n                        )}\r\n                        inputProps={{\r\n                            maxLength: 2,\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n\r\n                <Button\r\n                    aria-label=\"search\"\r\n                    // color=\"primary\"\r\n                    // variant=\"contained\"\r\n                    disableElevation\r\n                    className={clss(\r\n                        classes.searchBtn,\r\n                        colorTheme === themes[1] && classes.searchBtnPink\r\n                    )}\r\n                    onClick={getData}\r\n                >\r\n                    <SearchIcon />\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInput;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport clss from \"classnames\";\r\n\r\nconst customTheme = {\r\n    t1: {\r\n        accordionBgColor: \"rgba(186, 214, 224,0.2)\",\r\n        accordionSummaryColor: \"rgba(255,255,255,0.75)\",\r\n        accordionIconColor: \"rgba(255,255,255,0.75)\",\r\n        accordionDetailsColor: \"white\",\r\n        accordionDetailsBgColor: \"rgba(186, 214, 224,0.25)\",\r\n        tableBorderColor: \"rgba(255,255,255,0.5)\",\r\n        tableColor: \"white\",\r\n    },\r\n    t2: {\r\n        accordionBgColor: \"rgba(87, 7, 42,0.2)\",\r\n        accordionSummaryColor: \"#57072a\",\r\n        accordionIconColor: \"#57072a\",\r\n        accordionDetailsColor: \"black\",\r\n        accordionDetailsBgColor: \"rgba(255, 255,255,0.2)\",\r\n        tableBorderColor: \"rgba(0,0,0,0.25)\",\r\n        tableColor: \"black\",\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    accordionHeading: {},\r\n    accordion: {\r\n        \"&.MuiPaper-root\": {\r\n            backgroundColor: customTheme.t1.accordionBgColor,\r\n            boxShadow: \"none\",\r\n        },\r\n        \"&.MuiAccordion-root\": {},\r\n        \"&.Mui-expanded\": {\r\n            margin: \"0px 0px\",\r\n        },\r\n        \"& .MuiAccordionSummary-root\": {\r\n            height: \"48px\",\r\n            minHeight: \"0px\",\r\n            color: customTheme.t1.accordionSummaryColor,\r\n        },\r\n        \"& .MuiAccordionDetails-root\": {\r\n            color: customTheme.t1.accordionDetailsColor,\r\n            backgroundColor: customTheme.t1.accordionDetailsBgColor,\r\n            padding: \"10px 16px 10px\",\r\n            display: \"block\",\r\n        },\r\n    },\r\n    accordionPink: {\r\n        \"&.MuiPaper-root\": {\r\n            backgroundColor: customTheme.t2.accordionBgColor,\r\n        },\r\n        \"& .MuiAccordionSummary-root\": {\r\n            color: customTheme.t2.accordionSummaryColor,\r\n        },\r\n        \"& .MuiAccordionDetails-root\": {\r\n            color: customTheme.t2.accordionDetailsColor,\r\n            backgroundColor: customTheme.t2.accordionDetailsBgColor,\r\n        },\r\n    },\r\n    accordionIcon: {\r\n        color: customTheme.t1.accordionIconColor,\r\n    },\r\n    accordionIconPink: {\r\n        color: customTheme.t2.accordionIconColor,\r\n    },\r\n    table: {\r\n        \"& .MuiTableCell-root\": {\r\n            padding: \"0px 0px 0px 0px\",\r\n            borderBottomColor: customTheme.t1.tableBorderColor,\r\n        },\r\n        \"& .MuiTableCell-body\": {\r\n            color: customTheme.t1.tableColor,\r\n            fontSize: \"10px\",\r\n        },\r\n    },\r\n    tablePink: {\r\n        \"& .MuiTableCell-root\": {\r\n            borderBottomColor: customTheme.t2.tableBorderColor,\r\n        },\r\n        \"& .MuiTableCell-body\": {\r\n            color: customTheme.t2.tableColor,\r\n        },\r\n    },\r\n    tableContainer: {\r\n        \"&.MuiPaper-root\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        \"&.MuiPaper-elevation1\": {\r\n            boxShadow: \"none\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst WeatherDetails = ({ data }) => {\r\n    const classes = useStyles();\r\n    const { isMetric, themes, colorTheme } = useContext(WeatherContext);\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    function createData(name, measurement) {\r\n        return { name, measurement };\r\n    }\r\n\r\n    const rows = [\r\n        createData(\r\n            \"Wind speed:\",\r\n            isMetric\r\n                ? data?.wind.speed + \"m/sec\"\r\n                : (data?.wind.speed * 2.237).toFixed(2) + \"mph\"\r\n        ),\r\n        createData(\"Humidity:\", data?.main.humidity + \"%\"),\r\n        createData(\r\n            \"Temperature range:\",\r\n            (isMetric\r\n                ? data?.main.temp_min.toFixed() + \"°C\"\r\n                : ((data?.main.temp_min * 9) / 5 + 32).toFixed() + \"°F\") +\r\n                \"~\" +\r\n                (isMetric\r\n                    ? data?.main.temp_max.toFixed() + \"°C\"\r\n                    : ((data?.main.temp_max * 9) / 5 + 32).toFixed() + \"°F\")\r\n        ),\r\n        createData(\r\n            \"Feels like:\",\r\n            isMetric\r\n                ? data?.main.feels_like.toFixed() + \"°C\"\r\n                : ((data?.main.feels_like * 9) / 5 + 32).toFixed() + \"°F\"\r\n        ),\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {data && (\r\n                <div style={{ marginTop: \"2px\" }}>\r\n                    <Accordion\r\n                        expanded={expanded === \"panel1\"}\r\n                        onChange={handleAccordionChange(\"panel1\")}\r\n                        square\r\n                        className={clss(\r\n                            classes.accordion,\r\n                            colorTheme === themes[1] && classes.accordionPink\r\n                        )}\r\n                    >\r\n                        <AccordionSummary\r\n                            expandIcon={\r\n                                <ExpandMoreIcon\r\n                                    className={clss(\r\n                                        classes.accordionIcon,\r\n                                        colorTheme === themes[1] &&\r\n                                            classes.accordionIconPink\r\n                                    )}\r\n                                />\r\n                            }\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Typography className={classes.accordionHeading}>\r\n                                More details\r\n                            </Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <TableContainer\r\n                                component={Paper}\r\n                                className={classes.tableContainer}\r\n                            >\r\n                                <Table\r\n                                    className={clss(\r\n                                        classes.table,\r\n                                        colorTheme === themes[1] &&\r\n                                            classes.tablePink\r\n                                    )}\r\n                                    size=\"small\"\r\n                                    aria-label=\"details\"\r\n                                >\r\n                                    <TableBody>\r\n                                        {rows.map((row) => (\r\n                                            <TableRow key={row.name}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {row.measurement}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport clss from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCloud,\r\n    faCloudShowersHeavy,\r\n    faSun,\r\n    faMoon,\r\n    faSnowflake,\r\n    faSmog,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst customTheme = {\r\n    t1: {\r\n        gridColor: \"white\",\r\n        gridBgColor: \"rgba(186, 214, 224,0.2)\",\r\n    },\r\n    t2: {\r\n        gridColor: \"#57072a\",\r\n        gridBgColor: \"rgba(87, 7, 42,0.2)\",\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridOuter: {\r\n        backgroundColor: customTheme.t1.gridBgColor,\r\n        color: customTheme.t1.gridColor,\r\n    },\r\n    gridOuterPink: {\r\n        backgroundColor: customTheme.t2.gridBgColor,\r\n        color: customTheme.t2.gridColor,\r\n    },\r\n}));\r\n\r\nconst iconSize = \"4x\";\r\nconst weatherIcons = {\r\n    Clear: <FontAwesomeIcon icon={faSun} size={iconSize} />,\r\n    Clouds: <FontAwesomeIcon icon={faCloud} size={iconSize} />,\r\n    Rain: <FontAwesomeIcon icon={faCloudShowersHeavy} size={iconSize} />,\r\n    Snow: <FontAwesomeIcon icon={faSnowflake} size={iconSize} />,\r\n    Haze: <FontAwesomeIcon icon={faSmog} size={iconSize} />,\r\n};\r\n\r\nconst WeatherInfo = ({ data }) => {\r\n    const classes = useStyles();\r\n    const { isMetric, themes, colorTheme } = useContext(WeatherContext);\r\n\r\n    const [temp, setTemp] = useState(null);\r\n    const [isDay, setIsDay] = useState(true);\r\n    const [iconDisplay, setIconDisplay] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const weather = data?.weather[0]?.main;\r\n        if (weather === \"Clear\" && !isDay) {\r\n            setIconDisplay(<FontAwesomeIcon icon={faMoon} size={iconSize} />);\r\n        } else {\r\n            setIconDisplay(weatherIcons[data?.weather[0]?.main]);\r\n        }\r\n    }, [isDay, data?.weather]);\r\n\r\n    useEffect(() => {\r\n        let newTemp = data?.main.temp;\r\n        if (newTemp || newTemp === 0) {\r\n            newTemp = isMetric ? newTemp : (newTemp * 9) / 5 + 32;\r\n            setTemp(newTemp?.toFixed());\r\n        } else {\r\n            setTemp(null);\r\n        }\r\n    }, [isMetric, data?.main.temp]);\r\n\r\n    useEffect(() => {\r\n        if (!data) {\r\n        } else if (data.dt > data.sys.sunrise && data.dt < data.sys.sunset) {\r\n            setIsDay(true);\r\n        } else {\r\n            setIsDay(false);\r\n        }\r\n    }, [data, data?.dt, data?.sys.sunrise, data?.sys.sunset]);\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={clss(\r\n                    classes.gridOuter,\r\n                    colorTheme === themes[1] && classes.gridOuterPink\r\n                )}\r\n            >\r\n                <Grid item xs={6}>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"baseline\",\r\n                        }}\r\n                    >\r\n                        <Typography style={{ fontSize: \"4.25rem\" }}>\r\n                            {((temp || temp === 0) && temp + \"°\") || \"\"}\r\n                        </Typography>\r\n                        <Typography style={{ fontSize: \"2.5rem\" }}>\r\n                            {temp || temp === 0 ? (isMetric ? \"C\" : \"F\") : null}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    xs={6}\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    <Grid\r\n                        item\r\n                        style={{\r\n                            paddingTop: \"10px\",\r\n                        }}\r\n                    >\r\n                        {iconDisplay}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography>\r\n                            {data?.weather[0]?.description\r\n                                ? data?.weather[0]?.description\r\n                                : \"\"}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport clss from \"classnames\";\r\n\r\nconst customTheme = {\r\n    t1: {\r\n        searchBgColorHover:\r\n            \"linear-gradient(45deg, rgba(7,111,121,0.8) 0%, rgba(19,157,171,0.8) 100%)\",\r\n        citynameColor: \"white\",\r\n        accordionBgColor: \"rgba(186, 214, 224,0.2)\",\r\n    },\r\n    t2: {\r\n        searchBgColorHover:\r\n            \"linear-gradient(45deg, rgba(87,7,42,0.8) 0%, rgba(138,33,79,0.8) 100%)\",\r\n        citynameColor: \"#57072a\",\r\n        accordionBgColor: \"rgba(87, 7, 42,0.2)\",\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    refreshBtn: {\r\n        color: \"white\",\r\n        width: \"32px\",\r\n        height: \"32px\",\r\n        position: \"absolute\",\r\n        right: \"0\",\r\n        // top: \"70%\",\r\n        bottom: \"2px\",\r\n        borderRadius: 0,\r\n        transition: \"none\",\r\n        \"&.MuiButton-root\": {\r\n            minWidth: \"0\",\r\n        },\r\n\r\n        background: customTheme.t1.accordionBgColor,\r\n        \"&:hover\": {\r\n            background: customTheme.t1.accordionBgColor,\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            \"&:hover\": {\r\n                background: customTheme.t1.searchBgColorHover,\r\n            },\r\n        },\r\n    },\r\n    refreshBtnPink: {\r\n        background: customTheme.t2.accordionBgColor,\r\n        \"&:hover\": {\r\n            background: customTheme.t2.accordionBgColor,\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            \"&:hover\": {\r\n                background: customTheme.t2.searchBgColorHover,\r\n            },\r\n        },\r\n    },\r\n    citynameWrapper: {\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"flex-end\",\r\n        // marginBottom: \"20px\",\r\n        paddingBottom: \"20px\",\r\n        color: customTheme.t1.citynameColor,\r\n        // textShadow: \"0.5px 1px 2px black\",\r\n    },\r\n    citynameWrapperPink: {\r\n        color: customTheme.t2.citynameColor,\r\n    },\r\n}));\r\n\r\nconst LocationInfo = ({ data, doFetch }) => {\r\n    const classes = useStyles();\r\n    const { lang, themes, colorTheme, OPENWEATHER_API_KEY } = useContext(\r\n        WeatherContext\r\n    );\r\n\r\n    const handleRefresh = () => {\r\n        doFetch(\r\n            `weather?q=${data?.name},${data?.sys.country}&appid=${OPENWEATHER_API_KEY}&units=metric&lang=${lang}`\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clss(\r\n                classes.citynameWrapper,\r\n                colorTheme === themes[1] && classes.citynameWrapperPink\r\n            )}\r\n        >\r\n            <Typography style={{ fontSize: \"2rem\" }}>\r\n                {data?.name || \"\"}\r\n            </Typography>\r\n            <Typography style={{ fontSize: \"1rem\" }}>\r\n                {data ? <>&nbsp;{data.sys.country}</> : \"\"}\r\n            </Typography>\r\n            {data?.name && (\r\n                <Button\r\n                    aria-label=\"refresh\"\r\n                    onClick={handleRefresh}\r\n                    className={clss(\r\n                        classes.refreshBtn,\r\n                        colorTheme === themes[1] && classes.refreshBtnPink\r\n                    )}\r\n                >\r\n                    <RefreshIcon />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationInfo;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport clss from \"classnames\";\r\n\r\nconst customTheme = {\r\n    t1: {\r\n        messageColor: \"white\",\r\n    },\r\n    t2: {\r\n        messageColor: \"#57072a\",\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    message: {\r\n        fontSize: \"30px\",\r\n        color: customTheme.t1.messageColor,\r\n    },\r\n    messagePink: {\r\n        color: customTheme.t2.messageColor,\r\n    },\r\n}));\r\n\r\nconst FetchLoader = ({ data, isLoading }) => {\r\n    const classes = useStyles();\r\n    const { themes, colorTheme } = useContext(WeatherContext);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n            }}\r\n        >\r\n            {!data && !isLoading && (\r\n                <Typography\r\n                    className={clss(\r\n                        classes.message,\r\n                        colorTheme === themes[1] && classes.messagePink\r\n                    )}\r\n                >\r\n                    <i>No weather data</i>\r\n                </Typography>\r\n            )}\r\n            <Loader\r\n                type=\"Oval\"\r\n                color={themes[0] ? \"#23b0db\" : \"#23b0db\"}\r\n                height={80}\r\n                width={80}\r\n                visible={isLoading}\r\n                style={{\r\n                    height: \"80px\",\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FetchLoader;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport useFetch from \"./utils/useFetch.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport clss from \"classnames\";\r\nimport tealbg from \"./images/tealbg.jpeg\";\r\nimport pinkbg from \"./images/pinkbg.jpeg\";\r\nimport UserInput from \"./UserInput\";\r\nimport WeatherDetails from \"./WeatherDetails\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport LocationInfo from \"./LocationInfo\";\r\nimport FetchLoader from \"./FetchLoader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardWrapper: {\r\n        height: \"100vh\",\r\n        maxHeight: \"750px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"100%\",\r\n        },\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${tealbg})`,\r\n    },\r\n    cardWrapperPink: {\r\n        backgroundImage: `url(${pinkbg})`,\r\n    },\r\n    contentWrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"10px 10px 10px 10px\",\r\n    },\r\n}));\r\n\r\nconst Content = () => {\r\n    const classes = useStyles();\r\n    const {\r\n        lang,\r\n        themes,\r\n        colorTheme,\r\n        location,\r\n        setLocation,\r\n        OPENWEATHER_API_KEY,\r\n    } = useContext(WeatherContext);\r\n    const [{ response, error, isLoading }, doFetch] = useFetch(\r\n        \"http://api.openweathermap.org/data/2.5/\"\r\n    );\r\n    const [data, setData] = useState(null);\r\n    const [initFetch, setInitFetch] = useState(true);\r\n\r\n    //initial fetch upon page load\r\n    useEffect(() => {\r\n        if (initFetch && location.city) {\r\n            setInitFetch(false);\r\n            doFetch(\r\n                `weather?q=${location.city}${\r\n                    location.country ? \",\" + location.country : \"\"\r\n                }&appid=${OPENWEATHER_API_KEY}&units=metric&lang=${lang}`\r\n            );\r\n        }\r\n    }, [\r\n        doFetch,\r\n        initFetch,\r\n        lang,\r\n        location?.city,\r\n        location?.country,\r\n        OPENWEATHER_API_KEY,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"response:\\n\" + JSON.stringify(response, null, 4));\r\n        if (response) setData(response.data);\r\n    }, [response]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"data:\\n\" + JSON.stringify(data, null, 4));\r\n    // }, [data]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            data?.name !== location.city ||\r\n            data?.sys.country !== location.country\r\n        ) {\r\n            setLocation({ city: data?.name, country: data?.sys.country });\r\n        }\r\n    }, [\r\n        setLocation,\r\n        data?.name,\r\n        data?.sys.country,\r\n        location.city,\r\n        location.country,\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={clss(\r\n                    classes.cardWrapper,\r\n                    colorTheme === themes[1] && classes.cardWrapperPink\r\n                )}\r\n            >\r\n                <Toolbar />\r\n                <div className={clss(classes.contentWrapper)}>\r\n                    <UserInput doFetch={doFetch} />\r\n                    <FetchLoader data={data} isLoading={isLoading} />\r\n                    <LocationInfo data={data} doFetch={doFetch} />\r\n                    <WeatherInfo data={data} />\r\n                    <WeatherDetails data={data} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Content from \"./Content\";\nimport { WeatherProvider } from \"./WeatherContext\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <WeatherProvider>\n                <Content />\n            </WeatherProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}